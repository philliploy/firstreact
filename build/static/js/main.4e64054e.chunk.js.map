{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","onClick","removeFriend","id","Wrapper","children","Title","App","state","friends","topscore","score","map","friend","clicked","_this","setState","sort","Math","random","_this2","this","components_Wrapper","components_Title","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"usFA6BeA,MA1Bf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMM,MAEhCL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMS,YAEtCR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BH,EAAMU,YAIxCT,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAMX,EAAMY,aAAaZ,EAAMa,KAAKT,UAAU,UAA7D,wBCfSU,MAJf,SAAiBd,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMe,iBCG1BC,MAJf,SAAehB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMe,kBC4EvBE,6MAxEbC,MAAQ,CACNC,UACAC,SAAU,EACVC,MAAO,KAmBTT,aAAe,SAAAC,GAGdM,EAAQG,IAAI,SAAAC,GAIT,OAAIA,EAAOV,KAAOA,GAAyB,IAAnBU,EAAOC,SAC7BD,EAAOC,QAAQ,EACfC,EAAKC,SAAS,CAAEP,QAASA,EAASE,MAAOI,EAAKP,MAAMG,MAAQ,EAAGD,SAAUK,EAAKP,MAAME,SAAW,KACxF,GAGEG,EAAOV,KAAOA,GAAyB,IAAnBU,EAAOC,UAGrCC,EAAKC,SAAS,CAAIL,MAAO,KAClB,KAQTF,EAAQQ,KAAK,kBAAMC,KAAKC,SAAW,8EAK7B,IAAAC,EAAAC,KACP,OACE9B,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAD,4BAA4BF,KAAKb,MAAMG,MAAvC,IAA+CU,KAAKb,MAAME,SAA1D,MACCW,KAAKb,MAAMC,QAAQG,IAAI,SAAAC,GAAM,OAC5BtB,EAAAC,EAAAC,cAAC+B,EAAD,CACEtB,aAAckB,EAAKlB,aACnBC,GAAIU,EAAOV,GACXsB,IAAKZ,EAAOV,GACZP,KAAMiB,EAAOjB,KACbE,MAAOe,EAAOf,MACdC,WAAYc,EAAOd,WACnBC,SAAUa,EAAOb,qBAlEX0B,mBCDlBC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4e64054e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    topscore: 0,\n    score: 0\n  };\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   // const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n\n\n\n\n\n  //   friends.sort(() => Math.random() - 0.5);\n\n  //   this.setState({ friends, score:   this.state.score +1 });\n  // };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n\n  removeFriend = id => {\n \n    // Emily, iterates each element in the array of objects called friends which is a json file \n   friends.map(friend => {\n      //if the friend we're on matches the id that we're looking for\n      // alert(id +\" --- \" +friend.id );\n      //Emily. this check the json friend.id against the userclick id and look for friend.clicked equals 0\n      if (friend.id === id && friend.clicked === 0) {\n        friend.clicked=1;\n        this.setState({ friends: friends, score: this.state.score + 1, topscore: this.state.topscore + 1 });\n        return true; //Emily. since this is using a map function, it needs a return of boolean\n                     //This statement is true since it found the click id that matches our json friend id\n                     // and has the clicked to 0\n      } else if (friend.id === id && friend.clicked === 1) {\n \n         //Emily, if this doesn't match ,we reset score 0 return false\n       this.setState({   score: 0 });\n       return false;\n      }\n\n       //Emily, if and else if doesn't execute, the below code is the default to false\n      return false;\n    });\n\n    //Emily. this shuffle the images\n     friends.sort(() => Math.random() - 0.5);\n  }\n\n   \n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List score: {this.state.score} {this.state.topscore}  </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}